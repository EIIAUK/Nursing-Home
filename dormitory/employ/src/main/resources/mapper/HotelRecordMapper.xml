<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.demo.mapper.HotelRecordMapper">
  <resultMap id="BaseResultMap" type="com.demo.demo.model.HotelRecord">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CUSTOMER_NAME" jdbcType="VARCHAR" property="customerName" />
    <result column="OUTGOING_REASON" jdbcType="VARCHAR" property="outgoingReason" />
    <result column="OUTGOING_TIME" jdbcType="TIMESTAMP" property="outgoingTime" />
    <result column="EXPECTEDRETURN_TIME" jdbcType="TIMESTAMP" property="expectedreturnTime" />
    <result column="ACTUALRETURN_TIME" jdbcType="TIMESTAMP" property="actualreturnTime" />
    <result column="ESCORTED" jdbcType="VARCHAR" property="escorted" />
    <result column="RELATION" jdbcType="VARCHAR" property="relation" />
    <result column="ESCORTEDTEL" jdbcType="VARCHAR" property="escortedtel" />
    <result column="AUDIT_STATUS" jdbcType="VARCHAR" property="auditStatus" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hotel_egress
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.demo.model.HotelRecord">
    insert into hotel_egress (ID, CUSTOMER_NAME, OUTGOING_REASON, 
      OUTGOING_TIME, EXPECTEDRETURN_TIME, ACTUALRETURN_TIME, 
      ESCORTED, RELATION, ESCORTEDTEL, 
      AUDIT_STATUS)
    values (#{id,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{outgoingReason,jdbcType=VARCHAR}, 
      #{outgoingTime,jdbcType=TIMESTAMP}, #{expectedreturnTime,jdbcType=TIMESTAMP}, #{actualreturnTime,jdbcType=TIMESTAMP}, 
      #{escorted,jdbcType=VARCHAR}, #{relation,jdbcType=VARCHAR}, #{escortedtel,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.demo.demo.model.HotelRecord">
    update hotel_egress
    set CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      OUTGOING_REASON = #{outgoingReason,jdbcType=VARCHAR},
      OUTGOING_TIME = #{outgoingTime,jdbcType=TIMESTAMP},
      EXPECTEDRETURN_TIME = #{expectedreturnTime,jdbcType=TIMESTAMP},
      ACTUALRETURN_TIME = #{actualreturnTime,jdbcType=TIMESTAMP},
      ESCORTED = #{escorted,jdbcType=VARCHAR},
      RELATION = #{relation,jdbcType=VARCHAR},
      ESCORTEDTEL = #{escortedtel,jdbcType=VARCHAR},
      AUDIT_STATUS = #{auditStatus,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select ID, CUSTOMER_NAME, OUTGOING_REASON, OUTGOING_TIME, EXPECTEDRETURN_TIME, ACTUALRETURN_TIME, 
    ESCORTED, RELATION, ESCORTEDTEL, AUDIT_STATUS
    from hotel_egress
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select ID, CUSTOMER_NAME, OUTGOING_REASON, OUTGOING_TIME, EXPECTEDRETURN_TIME, ACTUALRETURN_TIME, 
    ESCORTED, RELATION, ESCORTEDTEL, AUDIT_STATUS
    from hotel_egress
    <where>
      <if test="customerName != null and customerName != ''">
        and CUSTOMER_NAME like concat('%',#{customerName},'%')
      </if>
      <if test="outgoingReason != null and outgoingReason != ''">
        and OUTGOING_REASON=#{outgoingReason}
      </if>
    </where>
  </select>

</mapper>